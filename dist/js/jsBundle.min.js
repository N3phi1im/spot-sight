!function(){"use strict";function t(t,e,o,n,s,r,a){t.state("Home",{url:"/",templateUrl:"views/home.html",controller:"HomeController as vm"}).state("Welcome",{url:"/welcome",templateUrl:"views/welcome.html"}),e.otherwise("/"),o.caseInsensitive(!0),o.strictMode(!1),n.html5Mode(!0),a.interceptors.push("HTTPFactory"),s.theme("default").primaryPalette("deep-orange").accentPalette("deep-purple"),r.defaultFontSet("material-icons")}function e(t,e,o,n){t.$on("$stateChangeStart",function(t,o,s,r,a){var i=n.status;if(!i.isLoggedIn){var c="Welcome"===o.name;if(c)return;e.url("/welcome")}})}t.$inject=["$stateProvider","$urlRouterProvider","$urlMatcherFactoryProvider","$locationProvider","$mdThemingProvider","$mdIconProvider","$httpProvider"],angular.module("app",["ui.router","ngMaterial"]).config(t).run(e),e.$inject=["$rootScope","$location","$state","UserService"]}(),function(){"use strict";function t(t,e,o,n,s){var r=this;r.user={},r.status=s.status,t.hide=function(){e.hide()},t.cancel=function(){e.cancel()},r.register=function(){var t=r.user;return t.username&&t.password&&t.c_password&&t.password===t.c_password?void s.register(t).then(function(){e.hide()}):!1},r.login=function(){s.login(r.user).then(function(){e.hide(),o.show(o.simple().textContent("Welcome back "+r.status.username.charAt(0).toUpperCase()+r.status.username.slice(1)+"!")),n.go("Home")})}}t.$inject=["$scope","$mdDialog","$mdToast","$state","UserService"],angular.module("app").controller("DialogController",["$scope","$mdDialog","$state","UserService",function(e,o,n,s){var r=this;r.status=s.status,r.logout=function(){localStorage.removeItem("token"),r.status.isLoggedIn=!1,r.status.callid=null,r.status.username=null,r.status.id=null,n.go("Welcome")},e.showTabDialog=function(e){o.show({controllerAs:"vm",controller:t,templateUrl:"views/Dialog.html",parent:angular.element(document.body),targetEvent:e,clickOutsideToClose:!0})}}])}(),function(){"use strict";function t(t,e){var o=this;o.list=[],o.contacts=[],o.status=t.status,o.isOpen=!1,o.is=!1,o.open=function(){o.list.length=0,o.is=!1},o.getAll=function(){e.get_contacts().then(function(t){for(var e=0;e<t.length;e++)o.contacts.push(t[e])})},o.add_contact=function(t){var n={add_id:t,logged_in_id:o.status.id};e.add_contact(n).then(function(t){o.getAll(),o.list.length=0})},o.look=function(t){o.list.length=0,e.contact_list_search(t).then(function(t){for(var e=0;e<t.length;e++)o.list.push(t[e])})},localStorage.token&&o.getAll()}t.$inject=["UserService","HomeFactory"],angular.module("app").controller("HomeController",t)}(),function(){"use strict";function t(t,e,o){function n(o){var n=e.defer();return t.post("/users/search",o).success(function(t){n.resolve(t)}),n.promise}function s(o){var n=e.defer();return t.post("/users/add",o).success(function(t){n.resolve(t)}),n.promise}function r(){var o=e.defer();return t.get("/users/contacts").success(function(t){o.resolve(t)}),o.promise}var a={};return a.contact_list_search=n,a.add_contact=s,a.get_contacts=r,a}t.$inject=["$http","$q","UserService"],angular.module("app").factory("HomeFactory",t)}(),function(){"use strict";function t(t){return{request:function(e){return e.headers=e.headers||{},e.headers.Accepts="application/json",e.headers["Content-Type"]="application/json",t.localStorage.getItem("token")&&(e.headers.authorization="Bearer "+t.localStorage.getItem("token")),e}}}t.$inject=["$window"],angular.module("app").factory("HTTPFactory",t)}(),function(){"use strict";function t(t,e,o,n){function s(o){var s={username:o.username.toLowerCase(),password:o.password},r=e.defer();return t.post("/users/login",s).success(function(t){a(t.token),d.status.isLoggedIn=!0,r.resolve()}).error(function(t){n.show(n.simple().textContent(t.message))}),r.promise}function r(o){var s=e.defer();return t.post("/users/register",o).success(function(t){d.login(o),s.resolve()}).error(function(t){n.show(n.simple().textContent(t.message))}),s.promise}function a(t){localStorage.setItem("token",t),d.status.callid=c(),d.status.username=u(),d.status.id=l()}function i(){return localStorage.token}function c(){return JSON.parse(atob(i().split(".")[1])).callid}function u(){return JSON.parse(atob(i().split(".")[1])).username}function l(){return JSON.parse(atob(i().split(".")[1])).id}var d={};return d.status={},i()&&(d.status.isLoggedIn=!0,d.status.callid=c(),d.status.username=u(),d.status.id=l()),d.setToken=a,d.getToken=i,d.login=s,d.register=r,d}t.$inject=["$http","$q","$window","$mdToast"],angular.module("app").factory("UserService",t)}();